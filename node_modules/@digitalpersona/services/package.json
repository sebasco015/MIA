{
  "_from": "@digitalpersona/services@^0.2",
  "_id": "@digitalpersona/services@0.2.8",
  "_inBundle": false,
  "_integrity": "sha512-rO+hCaV3eplhnVIB+fJr1WdM3BVU2hfWHxr2V+5CRH05dRUKJCj/21j4I32MlYQNNASkw/3/OMS88KXGyZuaxw==",
  "_location": "/@digitalpersona/services",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "@digitalpersona/services@^0.2",
    "name": "@digitalpersona/services",
    "escapedName": "@digitalpersona%2fservices",
    "scope": "@digitalpersona",
    "rawSpec": "^0.2",
    "saveSpec": null,
    "fetchSpec": "^0.2"
  },
  "_requiredBy": [
    "/@digitalpersona/devices"
  ],
  "_resolved": "https://registry.npmjs.org/@digitalpersona/services/-/services-0.2.8.tgz",
  "_shasum": "2814dd6e87b0ee789770c60ffa258c9cf2a00d1b",
  "_spec": "@digitalpersona/services@^0.2",
  "_where": "C:\\Users\\EVERSAN\\Desktop\\proyecto-mia\\proyecto-mia\\node_modules\\@digitalpersona\\devices",
  "author": {
    "name": "HID Global"
  },
  "browser": "./dist/es5.bundles/index.umd.js",
  "bugs": {
    "url": "https://github.com/hidglobal/digitalpersona-services/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@digitalpersona/core": "^0.2",
    "tslib": "^1.9.3"
  },
  "deprecated": false,
  "description": "DigitalPersona Web Access Services",
  "devDependencies": {
    "@types/jasmine": "^3.3",
    "@types/node": "^12.0",
    "fetch-mock": "^7.3",
    "jasmine": "^3.4",
    "jasmine-core": "^3.3",
    "karma": "^4.0",
    "karma-chrome-launcher": "^2.2",
    "karma-ie-launcher": "^1.0",
    "karma-jasmine": "^2.0",
    "karma-typescript": "^4.0",
    "mkdirp": "^0.5",
    "rimraf": "^2.6",
    "rollup": "^1.6",
    "rollup-plugin-node-resolve": "^4.0",
    "rollup-plugin-terser": "^4.0",
    "rollup-plugin-typescript2": "^0.21",
    "terser": "^3.17",
    "tslint": "^5.14",
    "typescript": "^3.5"
  },
  "es2015": "./dist/es6/index.js",
  "globalObject": "dp.services",
  "homepage": "https://github.com/hidglobal/digitalpersona-services#readme",
  "keywords": [
    "DigitalPersona",
    "authentication",
    "identification",
    "jwt",
    "policy",
    "claims",
    "enroll",
    "secret",
    "ActiveDirectory",
    "LDS",
    "Altus"
  ],
  "license": "MIT",
  "main": "./dist/es5.bundles/index.umd.js",
  "maintainers": [
    {
      "name": "Andrey Bronnikov",
      "email": "Andrey.Bronnikov@hidglobal.com"
    }
  ],
  "module": "./dist/es5/index.js",
  "name": "@digitalpersona/services",
  "peerDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hidglobal/digitalpersona-services.git"
  },
  "scripts": {
    "api": "npx api-extractor run --local --verbose",
    "api-all": "tsc && npm run api && npm run api-doc",
    "api-doc": "npx api-documenter markdown -i ./dist/api -o ./dist/api/docs",
    "build": "npm run clean && npm run tsc-all && npm run rollup && npm run api && npm run api-doc",
    "clean": "rimraf ./dist",
    "docs": "typedoc --options ./build/typedoc.config.js ./src",
    "local-npm": "start verdaccio",
    "prepublishOnly": "npm run build && npm run test-once",
    "rollup": "npm run rollup-es5 && npm run rollup-es5-min && npm run rollup-es6 && npm run rollup-es6-min",
    "rollup-es5": "rollup -c -c rollup.config.js --environment target:es5",
    "rollup-es5-min": "rollup -c -c rollup.config.js --environment target:es5,minify",
    "rollup-es6": "rollup -c -c rollup.config.js --environment target:es6",
    "rollup-es6-min": "rollup -c -c rollup.config.js --environment target:es6,minify",
    "test": "karma start",
    "test-admin": "set UUT=admin&& karma start",
    "test-auth": "set UUT=auth&& karma start",
    "test-claims": "set UUT=claims&& karma start",
    "test-common": "set UUT=common&& karma start",
    "test-enroll": "set UUT=enroll&& karma start",
    "test-once": "karma start --single-run",
    "test-policy": "set UUT=policy&& karma start",
    "test-private": "set UUT=private&& karma start",
    "test-secrets": "set UUT=secrets&& karma start",
    "tsc": "tsc",
    "tsc-all": "npm run tsc && npm run tsc-es5 && npm run tsc-es6",
    "tsc-es5": "tsc --p ./build/tsconfig/tsconfig.es5.json",
    "tsc-es6": "tsc --p ./build/tsconfig/tsconfig.es6.json"
  },
  "typings": "./dist/typings/index.d.ts",
  "version": "0.2.8"
}
